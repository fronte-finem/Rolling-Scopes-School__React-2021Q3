{"version":3,"file":"index.22fdc8f4.js","sources":["D:/dev/rs-school/React-RSSchool-2021q3/src/components/input/wrapper.tsx","D:/dev/rs-school/React-RSSchool-2021q3/src/components/input/text.tsx","D:/dev/rs-school/React-RSSchool-2021q3/src/components/input/date.tsx","D:/dev/rs-school/React-RSSchool-2021q3/src/components/input/select.tsx","D:/dev/rs-school/React-RSSchool-2021q3/src/components/input/checkbox.tsx","D:/dev/rs-school/React-RSSchool-2021q3/src/components/input/switcher.tsx","D:/dev/rs-school/React-RSSchool-2021q3/src/components/input/radio-switcher.tsx","D:/dev/rs-school/React-RSSchool-2021q3/src/shared/data/language-map.ts","D:/dev/rs-school/React-RSSchool-2021q3/src/shared/regex/email.ts","D:/dev/rs-school/React-RSSchool-2021q3/src/components/person-form/validation.ts","D:/dev/rs-school/React-RSSchool-2021q3/src/components/person-form/static-props.ts","D:/dev/rs-school/React-RSSchool-2021q3/src/shared/random/uuid.ts","D:/dev/rs-school/React-RSSchool-2021q3/src/components/person-form/state.ts","D:/dev/rs-school/React-RSSchool-2021q3/src/components/person-form/person-form.tsx","D:/dev/rs-school/React-RSSchool-2021q3/src/components/person-card/person-card-item.tsx","D:/dev/rs-school/React-RSSchool-2021q3/src/components/person-card/person-card.tsx","D:/dev/rs-school/React-RSSchool-2021q3/src/components/person-cards-field/person-cards-field.tsx","D:/dev/rs-school/React-RSSchool-2021q3/src/components/app/app.tsx","D:/dev/rs-school/React-RSSchool-2021q3/src/main.tsx"],"sourcesContent":["import React from 'react';\nimport classes from './wrapper.module.css';\nimport { ErrorProps, InputStaticProps } from './types';\n\nexport const InputWrapper: React.FC<InputStaticProps & ErrorProps> = ({\n  id,\n  label,\n  errorMessage,\n  children,\n  isError,\n}) => {\n  return (\n    <label\n      htmlFor={id}\n      className={`${classes.wrapper} ${isError ? classes.error : ''}`}>\n      <div className={classes.label}>{label}</div>\n      <div className={classes.input}>{children}</div>\n      {isError && <div className={classes.errorMessage}>{errorMessage}</div>}\n    </label>\n  );\n};\n","import React from 'react';\n// import classes from './text.module.css';\nimport { InputWrapper } from './wrapper';\nimport { ErrorProps, InputStaticProps } from './types';\n\nexport enum InputTextType {\n  TEXT = 'text',\n  EMAIL = 'email',\n  PASSWORD = 'password',\n}\n\nexport interface InputTextStaticProps extends InputStaticProps, ErrorProps {\n  type?: InputTextType;\n}\n\nexport interface InputTextProps extends InputTextStaticProps {\n  onInput: (value: string) => void;\n  onInvalid: () => void;\n  value: string;\n}\n\nexport const InputText: React.FC<InputTextProps> = ({\n  type = InputTextType.TEXT,\n  id,\n  name,\n  label,\n  placeholder,\n  onInput,\n  onInvalid,\n  value,\n  errorMessage,\n  isError,\n  required,\n}) => {\n  const handleInput = (event: React.FormEvent<HTMLInputElement>) => {\n    onInput(event.currentTarget.value);\n  };\n\n  return (\n    <InputWrapper {...{ id, label, errorMessage, isError }}>\n      <input\n        {...{ id, placeholder, required, value }}\n        type={type}\n        name={name || id}\n        onInput={handleInput}\n        onInvalid={onInvalid}\n      />\n    </InputWrapper>\n  );\n};\n","import React from 'react';\nimport classes from './date.module.css';\nimport { InputWrapper } from './wrapper';\nimport { ErrorProps, InputStaticProps } from './types';\n\nexport interface InputDateStaticProps extends InputStaticProps, ErrorProps {\n  min?: string;\n  max?: string;\n}\n\nexport interface InputDateProps extends InputDateStaticProps {\n  onInput: (value: Date | null) => void;\n  onInvalid: () => void;\n  value: string;\n}\n\nexport const InputDate: React.FC<InputDateProps> = ({\n  id,\n  name,\n  label,\n  onInput,\n  onInvalid,\n  value,\n  min,\n  max,\n  isError,\n  errorMessage,\n  required,\n}) => {\n  const handleInput = (event: React.FormEvent<HTMLInputElement>) => {\n    onInput(event.currentTarget.valueAsDate);\n  };\n\n  return (\n    <InputWrapper {...{ id, label, errorMessage, isError }}>\n      <input\n        className={`${classes.date} ${classes.clickable} ${classes.half}`}\n        type=\"date\"\n        {...{ id, min, max, value, required }}\n        name={name || id}\n        onInput={handleInput}\n        onInvalid={onInvalid}\n        pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n      />\n    </InputWrapper>\n  );\n};\n","import React from 'react';\nimport classes from './select.module.css';\nimport { InputWrapper } from './wrapper';\nimport { ErrorProps, InputStaticProps } from './types';\n\nexport interface SelectStaticProps extends InputStaticProps, ErrorProps {\n  data: Map<string, string>;\n}\n\nexport interface SelectProps extends SelectStaticProps {\n  value: string;\n  onInput: (value: string) => void;\n  onInvalid: () => void;\n}\n\nexport const Select: React.FC<SelectProps> = ({\n  id,\n  name,\n  label,\n  data,\n  errorMessage,\n  isError,\n  value,\n  onInput,\n  onInvalid,\n}) => {\n  const handleInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    onInput(event.currentTarget.value);\n  };\n\n  return (\n    <InputWrapper {...{ id, label, errorMessage, isError }}>\n      <select\n        className={classes.select}\n        {...{ id, value }}\n        name={name || id}\n        onInput={handleInput}\n        onInvalid={onInvalid}>\n        {[...data.entries()].map(([key, description]) => (\n          <option key={key} value={key}>\n            {description}\n          </option>\n        ))}\n      </select>\n    </InputWrapper>\n  );\n};\n","import React from 'react';\n// import classes from './checkbox.module.css';\nimport { InputWrapper } from './wrapper';\nimport { ErrorProps, InputStaticProps } from './types';\n\ninterface CheckboxProps extends InputStaticProps, ErrorProps {\n  onChange: (value: boolean) => void;\n  onInvalid: () => void;\n  value: boolean;\n}\n\nexport const Checkbox: React.FC<CheckboxProps> = ({\n  id,\n  name,\n  label,\n  errorMessage,\n  isError,\n  onChange,\n  onInvalid,\n  value,\n  required,\n}) => {\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    onChange(event.currentTarget.checked);\n  };\n\n  return (\n    <InputWrapper {...{ id, label, errorMessage, isError }}>\n      <input\n        type=\"checkbox\"\n        {...{ id, required }}\n        name={name || id}\n        onChange={handleChange}\n        onInvalid={onInvalid}\n        checked={value}\n      />\n    </InputWrapper>\n  );\n};\n","import React from 'react';\nimport { InputWrapper } from './wrapper';\nimport classes from './switcher.module.css';\nimport { ErrorProps, InputStaticProps } from './types';\n\nexport interface SwitcherStaticProps extends InputStaticProps, ErrorProps {\n  value1: string;\n  value2: string;\n}\n\nexport interface SwitcherProps extends SwitcherStaticProps {\n  onChange: (value: string) => void;\n  onInvalid: () => void;\n  value: string;\n}\n\nexport const Switcher: React.FC<SwitcherProps> = ({\n  id,\n  name,\n  label,\n  value1,\n  value2,\n  onChange,\n  onInvalid,\n  value,\n  errorMessage,\n  isError,\n}) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.checked ? value2 : value1);\n  };\n\n  return (\n    <InputWrapper {...{ id, label, errorMessage, isError }}>\n      <div className={classes.switcher}>\n        <input\n          className={classes.check}\n          type=\"checkbox\"\n          id={id}\n          name={name || id}\n          onChange={handleChange}\n          onInvalid={onInvalid}\n          checked={value === value2}\n        />\n        <div className={classes.plank}>\n          <div className={classes.value}>{value1}</div>\n          <div className={classes.handle} />\n          <div className={classes.value}>{value2}</div>\n        </div>\n      </div>\n    </InputWrapper>\n  );\n};\n","import React from 'react';\nimport { ErrorProps, InputStaticProps } from './types';\nimport { InputWrapper } from './wrapper';\nimport classes from './radio-switcher.module.css';\n\nexport interface RadioSwitcherStaticProps extends InputStaticProps, ErrorProps {\n  values: string[];\n}\n\nexport interface RadioSwitcherProps extends RadioSwitcherStaticProps {\n  onChange: (value: string) => void;\n  onInvalid: () => void;\n  value: string;\n}\n\nexport const RadioSwitcher: React.FC<RadioSwitcherProps> = ({\n  id,\n  name,\n  label,\n  onChange,\n  onInvalid,\n  values,\n  value,\n  errorMessage,\n  isError,\n}) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <InputWrapper {...{ id, label, errorMessage, isError }}>\n      <ul className={classes.radioSwitcher}>\n        {values.map((currentValue) => {\n          const customId = `${name || id}-${currentValue}`;\n          return (\n            <li className={classes.radioElement} key={customId}>\n              <label className={classes.radioLabel} htmlFor={customId}>\n                <input\n                  type=\"radio\"\n                  id={customId}\n                  name={name}\n                  value={currentValue}\n                  checked={currentValue === value}\n                  onChange={handleChange}\n                  onInvalid={onInvalid}\n                />\n                {currentValue}\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </InputWrapper>\n  );\n};\n","export const LANGUAGE_MAP: Map<string, string> = new Map([\n  ['js', 'Javascript'],\n  ['ts', 'Typescript'],\n  ['py', 'Python'],\n  ['rb', 'Ruby'],\n  ['lua', 'Lua'],\n  ['php', 'PHP'],\n  ['dart', 'Dart'],\n  ['ex', 'Elixir'],\n  ['erl', 'Erlang'],\n  ['jl', 'Julia'],\n  ['go', 'Go'],\n  ['rs', 'Rust'],\n  ['java', 'Java'],\n  ['kt', 'Kotlin'],\n  ['swift', 'Swift'],\n  ['d', 'D'],\n  ['cs', 'C#'],\n  ['cpp', 'C++'],\n  ['c', 'C'],\n  ['asm', 'Assembler'],\n  ['sh', 'Shell'],\n  ['ps1', 'Powershell'],\n  ['lisp', 'Common Lisp'],\n  ['clj', 'Clojure'],\n  ['ml', 'OCaml'],\n  ['fs', 'F#'],\n  ['scala', 'Scala'],\n  ['hs', 'Haskell'],\n  ['other', 'Other...'],\n  ['no', 'No one!'],\n]);\n","// https://www.emailregex.com/\n\nexport const EMAIL_REGEX =\n  /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/u;\n","import { EMAIL_REGEX } from 'shared/regex/email';\n\nexport const dateToString = (date: Date) => date.toISOString().split('T')[0];\n\nexport interface ValidateText {\n  message: string;\n  isValid: (value: string) => boolean;\n}\n\ninterface ValidateDate {\n  message: string;\n  isValid: (value: Date | null) => boolean;\n}\n\nexport interface ValidateBoolean {\n  message: string;\n  isValid: (value: boolean) => boolean;\n}\n\nexport const VALIDATE_NAME: ValidateText = {\n  message: 'Name is limited to 3-30 alphabet characters',\n  isValid: (value: string) => /^\\p{Alpha}{3,30}$/u.test(value),\n};\n\nexport const VALIDATE_EMAIL: ValidateText = {\n  message: 'Email invalid according RFC 5322 Official Standard',\n  isValid: (value: string) => EMAIL_REGEX.test(value),\n};\n\nexport const MAX_DATE = new Date();\nexport const MIN_DATE = new Date();\n\nMIN_DATE.setFullYear(MAX_DATE.getFullYear() - 120);\n\nconst isDateClamp = (date: number) =>\n  date >= MIN_DATE.getTime() && date <= MAX_DATE.getTime();\n\nexport const VALIDATE_DATE: ValidateDate = {\n  message: `Date invalid if unset or before ${dateToString(\n    MIN_DATE\n  )} or after ${dateToString(MAX_DATE)}`,\n  isValid: (value: Date | null) =>\n    value !== null && isDateClamp(value.getTime()),\n};\n\nexport const VALIDATE_AGREEMENT: ValidateBoolean = {\n  message: 'Agreement required for submit 🤝',\n  isValid: (value: boolean) => value,\n};\n","import { InputStaticProps } from 'components/input/types';\nimport { SwitcherStaticProps } from 'components/input/switcher';\nimport { InputDateStaticProps } from 'components/input/date';\nimport { SelectStaticProps } from 'components/input/select';\nimport { RadioSwitcherStaticProps } from 'components/input/radio-switcher';\nimport { InputTextStaticProps, InputTextType } from 'components/input/text';\nimport { LANGUAGE_MAP } from 'shared/data/language-map';\nimport {\n  dateToString,\n  MAX_DATE,\n  MIN_DATE,\n  VALIDATE_AGREEMENT,\n  VALIDATE_DATE,\n  VALIDATE_EMAIL,\n  VALIDATE_NAME,\n} from './validation';\n\nexport const FIRST_NAME: InputTextStaticProps = {\n  type: InputTextType.TEXT,\n  id: 'first-name',\n  label: 'First name:',\n  placeholder: 'Jane',\n  required: true,\n  errorMessage: VALIDATE_NAME.message,\n};\n\nexport const LAST_NAME: InputTextStaticProps = {\n  type: InputTextType.TEXT,\n  id: 'last-name',\n  label: 'Last name:',\n  placeholder: 'Doe',\n  required: true,\n  errorMessage: VALIDATE_NAME.message,\n};\n\nexport const EMAIL: InputTextStaticProps = {\n  type: InputTextType.EMAIL,\n  id: 'email',\n  label: 'Email:',\n  placeholder: 'jane-doe@e.mail',\n  required: true,\n  errorMessage: VALIDATE_EMAIL.message,\n};\n\nexport const GENDER: SwitcherStaticProps = {\n  id: 'gender',\n  label: 'Gender:',\n  value1: 'female',\n  value2: 'male',\n  required: true,\n};\n\nexport const BIRTHDATE: InputDateStaticProps = {\n  id: 'birthdate',\n  label: 'Birthdate:',\n  required: true,\n  errorMessage: VALIDATE_DATE.message,\n  min: dateToString(MIN_DATE),\n  max: dateToString(MAX_DATE),\n};\n\nexport const LANGUAGE: SelectStaticProps = {\n  id: 'language',\n  label: 'I ❤️ language:',\n  required: true,\n  data: LANGUAGE_MAP,\n};\n\nconst REACTION_VALUES = ['🙂', '😐', '🙁'];\n\nexport const REACTION: RadioSwitcherStaticProps = {\n  id: 'reaction',\n  label: 'Reaction:',\n  values: REACTION_VALUES,\n  required: true,\n};\n\nexport const AGREEMENT: InputStaticProps = {\n  id: 'agreement',\n  label: 'I agree to submit:',\n  required: true,\n  errorMessage: VALIDATE_AGREEMENT.message,\n};\n","// https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid\n// https://gist.github.com/jed/982883\n\nconst TEMPLATE = `${1e7}-${1e3}-${4e3}-${8e3}-${1e11}`;\n\nconst transform = (x: number) =>\n  x ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (x / 4)));\n\nexport function getUUIDv4(): string {\n  return TEMPLATE.replace(/[018]/g, (c) => transform(+c).toString(16));\n}\n","import { LANGUAGE_MAP } from 'shared/data/language-map';\nimport { getUUIDv4 } from 'shared/random/uuid';\nimport {\n  VALIDATE_AGREEMENT,\n  VALIDATE_DATE,\n  VALIDATE_EMAIL,\n  VALIDATE_NAME,\n} from './validation';\nimport { GENDER, REACTION } from './static-props';\n\ninterface InputState<T> {\n  value: T;\n  isError: boolean;\n}\n\ninterface InputStateX<T> extends InputState<T> {\n  validate: (value: T) => boolean;\n}\n\nexport interface PersonFormState {\n  firstName: InputStateX<string>;\n  lastName: InputStateX<string>;\n  email: InputStateX<string>;\n  gender: InputStateX<string>;\n  birthdate: InputStateX<Date | null>;\n  language: InputStateX<string>;\n  reaction: InputStateX<string>;\n  agreement: InputStateX<boolean>;\n}\n\nexport type InferInputStateGenericType<ISX> = ISX extends InputStateX<infer T>\n  ? T\n  : never;\n\nexport type PersonFormDataClean = {\n  [K in keyof PersonFormState]: InferInputStateGenericType<PersonFormState[K]>;\n};\n\nexport type PersonFormData = PersonFormDataClean & {\n  id: string;\n};\n\nexport function mapStateToData(\n  personFormState: PersonFormState\n): PersonFormData {\n  return {\n    id: getUUIDv4(),\n    ...(Object.entries(personFormState).reduce<Record<string, unknown>>(\n      (acc, [key, state]) => {\n        acc[key] = state.value;\n        return acc;\n      },\n      {}\n    ) as PersonFormDataClean),\n  };\n}\n\nexport function validate<K extends keyof PersonFormState>(\n  state: PersonFormState,\n  key: K,\n  value: InferInputStateGenericType<PersonFormState[K]>\n): PersonFormState {\n  const prev = state[key] as unknown as InputStateX<typeof value>;\n  const isError = !prev.validate(value);\n  return { ...state, [key]: { ...prev, value, isError } };\n}\n\nexport function invalidate<K extends keyof PersonFormState>(\n  state: PersonFormState,\n  key: K\n): PersonFormState {\n  const prev = state[key];\n  return { ...state, [key]: { ...prev, isError: true } };\n}\n\nexport function isValid(state: PersonFormState): boolean {\n  return Object.values(state).every((item) => !item.isError);\n}\n\nexport const INITIAL_PERSON_FORM_STATE: PersonFormState = {\n  firstName: {\n    value: '',\n    isError: false,\n    validate: (value: string) => VALIDATE_NAME.isValid(value),\n  },\n  lastName: {\n    value: '',\n    isError: false,\n    validate: (value: string) => VALIDATE_NAME.isValid(value),\n  },\n  email: {\n    value: '',\n    isError: false,\n    validate: (value: string) => VALIDATE_EMAIL.isValid(value),\n  },\n  gender: {\n    value: GENDER.value1,\n    isError: false,\n    validate: () => true,\n  },\n  reaction: {\n    value: REACTION.values[1],\n    isError: false,\n    validate: () => true,\n  },\n  birthdate: {\n    value: null,\n    isError: false,\n    validate: (value: Date | null) => VALIDATE_DATE.isValid(value),\n  },\n  language: {\n    value: LANGUAGE_MAP.keys().next().value,\n    isError: false,\n    validate: () => true,\n  },\n  agreement: {\n    value: false,\n    isError: false,\n    validate: (value: boolean) => VALIDATE_AGREEMENT.isValid(value),\n  },\n};\n","import React, { useState } from 'react';\nimport { InputText } from 'components/input/text';\nimport { InputDate } from 'components/input/date';\nimport { Select } from 'components/input/select';\nimport { Checkbox } from 'components/input/checkbox';\nimport { Switcher } from 'components/input/switcher';\nimport { RadioSwitcher } from 'components/input/radio-switcher';\nimport btnClasses from 'components/button/button.module.css';\nimport classes from './person-form.module.css';\nimport {\n  AGREEMENT,\n  BIRTHDATE,\n  EMAIL,\n  FIRST_NAME,\n  GENDER,\n  LANGUAGE,\n  LAST_NAME,\n  REACTION,\n} from './static-props';\nimport {\n  InferInputStateGenericType,\n  INITIAL_PERSON_FORM_STATE,\n  invalidate,\n  isValid,\n  PersonFormData,\n  PersonFormState,\n  mapStateToData,\n  validate,\n} from './state';\nimport { dateToString } from './validation';\n\ninterface PersonFormProps {\n  onSubmit?: (data: PersonFormData) => void;\n}\n\nexport const PersonForm: React.FC<PersonFormProps> = ({ onSubmit }) => {\n  const [personFormState, setPersonFormState] = useState(\n    INITIAL_PERSON_FORM_STATE\n  );\n\n  const handleReset = () => {\n    setPersonFormState(INITIAL_PERSON_FORM_STATE);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!isValid(personFormState)) return;\n    onSubmit?.(mapStateToData(personFormState));\n    handleReset();\n  };\n\n  function handleInput<K extends keyof PersonFormState>(key: K) {\n    return (value: InferInputStateGenericType<PersonFormState[K]>) => {\n      setPersonFormState((prev) => validate(prev, key, value));\n    };\n  }\n\n  function handleInvalid<K extends keyof PersonFormState>(key: K) {\n    return () => {\n      setPersonFormState((prev) => invalidate(prev, key));\n    };\n  }\n\n  return (\n    <form className={classes.personForm} onSubmit={handleSubmit}>\n      <div className={classes.inputs}>\n        <InputText\n          {...FIRST_NAME}\n          onInput={handleInput('firstName')}\n          onInvalid={handleInvalid('firstName')}\n          value={personFormState.firstName.value}\n          isError={personFormState.firstName.isError}\n        />\n\n        <InputText\n          {...LAST_NAME}\n          onInput={handleInput('lastName')}\n          onInvalid={handleInvalid('lastName')}\n          value={personFormState.lastName.value}\n          isError={personFormState.lastName.isError}\n        />\n\n        <InputText\n          {...EMAIL}\n          onInput={handleInput('email')}\n          onInvalid={handleInvalid('email')}\n          value={personFormState.email.value}\n          isError={personFormState.email.isError}\n        />\n\n        <Switcher\n          {...GENDER}\n          onChange={handleInput('gender')}\n          onInvalid={handleInvalid('gender')}\n          value={personFormState.gender.value}\n        />\n\n        <InputDate\n          {...BIRTHDATE}\n          onInput={handleInput('birthdate')}\n          onInvalid={handleInvalid('birthdate')}\n          value={\n            personFormState.birthdate.value\n              ? dateToString(personFormState.birthdate.value)\n              : ''\n          }\n          isError={personFormState.birthdate.isError}\n        />\n\n        <Select\n          {...LANGUAGE}\n          onInput={handleInput('language')}\n          onInvalid={handleInvalid('language')}\n          value={personFormState.language.value}\n          isError={personFormState.language.isError}\n        />\n\n        <RadioSwitcher\n          {...REACTION}\n          onChange={handleInput('reaction')}\n          onInvalid={handleInvalid('reaction')}\n          value={personFormState.reaction.value}\n          isError={personFormState.reaction.isError}\n        />\n\n        <Checkbox\n          {...AGREEMENT}\n          onChange={handleInput('agreement')}\n          onInvalid={handleInvalid('agreement')}\n          value={personFormState.agreement.value}\n          isError={personFormState.agreement.isError}\n        />\n      </div>\n\n      <div className={classes.buttons}>\n        <button\n          className={`${btnClasses.button} ${btnClasses.secondary}`}\n          type=\"button\"\n          onClick={handleReset}>\n          Reset\n        </button>\n        <button className={btnClasses.button} type=\"submit\">\n          Create\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport classes from './person-card-item.module.css';\n\ninterface PersonCardItemProps {\n  term: string;\n  description: string;\n}\n\nexport const PersonCardItem: React.FC<PersonCardItemProps> = ({\n  term,\n  description,\n}) => {\n  return (\n    <>\n      <dt className={`${classes.cell} ${classes.term}`}>{term}:</dt>\n      <dd className={`${classes.cell} ${classes.description}`}>\n        {description}\n      </dd>\n    </>\n  );\n};\n","import React from 'react';\nimport { PersonFormData } from 'components/person-form/state';\nimport { LANGUAGE_MAP } from 'shared/data/language-map';\nimport classes from './person-card.module.css';\nimport { PersonCardItem } from './person-card-item';\n\ninterface PersonCardProps {\n  data: PersonFormData;\n}\n\nexport const PersonCard: React.FC<PersonCardProps> = ({ data }) => {\n  return (\n    <dl className={classes.card}>\n      <PersonCardItem term=\"First name\" description={data.firstName} />\n      <PersonCardItem term=\"Last name\" description={data.lastName} />\n      <PersonCardItem term=\"Email\" description={data.email} />\n      <PersonCardItem term=\"Gender\" description={data.gender} />\n      <PersonCardItem\n        term=\"Birthdate\"\n        description={data.birthdate?.toLocaleDateString() || 'unknown'}\n      />\n      <PersonCardItem\n        term=\"Coding language\"\n        description={LANGUAGE_MAP.get(data.language) || 'unknown'}\n      />\n      <PersonCardItem term=\"Reaction\" description={data.reaction} />\n    </dl>\n  );\n};\n","import React from 'react';\nimport { PersonFormData } from 'components/person-form/state';\nimport { PersonCard } from 'components/person-card/person-card';\nimport classes from './person-cards-field.module.css';\n\ninterface PersonCardsFieldProps {\n  dataArray: PersonFormData[];\n}\n\nexport const PersonCardsField: React.FC<PersonCardsFieldProps> = ({\n  dataArray,\n}) => {\n  return (\n    <div className={classes.field}>\n      {dataArray.map((data) => (\n        <PersonCard key={data.id} data={data} />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { PersonForm } from 'components/person-form/person-form';\nimport classes from './app.module.css';\nimport { PersonFormData } from '../person-form/state';\nimport { PersonCardsField } from '../person-cards-field/person-cards-field';\n\nexport const App = () => {\n  const [dataArray, setDataArray] = useState<PersonFormData[]>([]);\n\n  const handleSubmit = (data: PersonFormData) => {\n    setDataArray((prev) => [...prev, data]);\n  };\n\n  return (\n    <div className={classes.app}>\n      <div className={classes.container}>\n        <PersonForm onSubmit={handleSubmit} />\n        <PersonCardsField dataArray={dataArray} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/app/app';\n\nconst initApp = () => {\n  const root = document.createElement('div');\n  root.id = 'root';\n  document.body.append(root);\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    root\n  );\n};\n\ninitApp();\n"],"names":["classes","useState"],"mappings":"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"}